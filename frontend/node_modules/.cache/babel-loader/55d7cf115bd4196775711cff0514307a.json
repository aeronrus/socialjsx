{"ast":null,"code":"var _jsxFileName = \"D:\\\\frontend\\\\React\\\\vk(api)\\\\youtube2022\\\\frontend\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './comments.scss';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../context/authContext';\nimport Comment from '../comment/Comment';\nimport { useQuery, useMutation, useQueryClient, isError } from '@tanstack/react-query';\nimport { addRequest } from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchComments = async () => {\n  const {\n    res\n  } = await addRequest.get(`/comments/postId=${postId}`).then(res => {\n    return res.data;\n  });\n};\n\nconst createComments = async () => {\n  const {\n    res\n  } = await addRequest.post('/comments', newComment).then(res => {\n    return res.data;\n  });\n};\n\nconst Comments = _ref => {\n  _s();\n\n  let {\n    postId\n  } = _ref;\n  const [desc, setDesc] = useState('');\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data,\n    isLoading,\n    isError\n  } = useQuery(['comments'], fetchComments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: desc,\n      onChange: e => setDesc(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Add comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Errors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : data.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 31\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"oTM/dl5/MHKLHv66Bg6Gd3aYFUc=\", false, function () {\n  return [useQuery];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["D:/frontend/React/vk(api)/youtube2022/frontend/src/components/comments/Comments.jsx"],"names":["React","useContext","useState","Link","AuthContext","Comment","useQuery","useMutation","useQueryClient","isError","addRequest","fetchComments","res","get","postId","then","data","createComments","post","newComment","Comments","desc","setDesc","currentUser","isLoading","e","target","value","handleClick","map","comment"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,iBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,cAAhC,EAAgDC,OAAhD,QAA+D,uBAA/D;AACA,SAASC,UAAT,QAA2B,aAA3B;;;AAEA,MAAMC,aAAa,GAAG,YAAY;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAU,MAAMF,UAAU,CAACG,GAAX,CAAgB,oBAAmBC,MAAO,EAA1C,EAA6CC,IAA7C,CAAmDH,GAAD,IAAS;AAC/E,WAAOA,GAAG,CAACI,IAAX;AACD,GAFqB,CAAtB;AAGD,CAJD;;AAMA,MAAMC,cAAc,GAAG,YAAY;AACjC,QAAM;AAAEL,IAAAA;AAAF,MAAU,MAAMF,UAAU,CAACQ,IAAX,CAAgB,WAAhB,EAA6BC,UAA7B,EAAyCJ,IAAzC,CAA+CH,GAAD,IAAS;AAC3E,WAAOA,GAAG,CAACI,IAAX;AACD,GAFqB,CAAtB;AAGD,CAJD;;AAMA,MAAMI,QAAQ,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEN,IAAAA;AAAF,GAAe;AAC/B,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAkBtB,UAAU,CAACG,WAAD,CAAlC;AAEA,QAAM;AAAEY,IAAAA,IAAF;AAAQQ,IAAAA,SAAR;AAAmBf,IAAAA;AAAnB,MAA+BH,QAAQ,CAAC,CAAC,UAAD,CAAD,EAAeK,aAAf,CAA7C;AAEA,sBACE;AAAA,4BACE;AAAO,MAAA,KAAK,EAAEU,IAAd;AAAoB,MAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGJ,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,GAENf,OAAO,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,GAGTO,IAAI,CAACa,GAAL,CAAUC,OAAD,iBAAa,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAtB,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnBD;;GAAMV,Q;UAIiCd,Q;;;KAJjCc,Q;AAoBN,eAAeA,QAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport './comments.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport Comment from '../comment/Comment';\r\nimport { useQuery, useMutation, useQueryClient, isError } from '@tanstack/react-query';\r\nimport { addRequest } from '../../axios';\r\n\r\nconst fetchComments = async () => {\r\n  const { res } = await addRequest.get(`/comments/postId=${postId}`).then((res) => {\r\n    return res.data;\r\n  });\r\n};\r\n\r\nconst createComments = async () => {\r\n  const { res } = await addRequest.post('/comments', newComment).then((res) => {\r\n    return res.data;\r\n  });\r\n};\r\n\r\nconst Comments = ({ postId }) => {\r\n  const [desc, setDesc] = useState('');\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const { data, isLoading, isError } = useQuery(['comments'], fetchComments);\r\n\r\n  return (\r\n    <div>\r\n      <input value={desc} onChange={(e) => setDesc(e.target.value)}></input>\r\n      <button onClick={handleClick}>Add comment</button>\r\n      {isLoading ? (\r\n        <h3>Loading</h3>\r\n      ) : isError ? (\r\n        <h3>Errors</h3>\r\n      ) : (\r\n        data.map((comment) => <Comment comment={comment} />)\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}