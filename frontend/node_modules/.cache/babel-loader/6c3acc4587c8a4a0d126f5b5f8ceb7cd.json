{"ast":null,"code":"var _jsxFileName = \"D:\\\\frontend\\\\React\\\\vk(api)\\\\youtube2022\\\\frontend\\\\src\\\\context\\\\authContext.js\",\n    _s2 = $RefreshSig$();\n\n//весь AuthContext служит нам только для функционала логина и регистрации\nimport axios from 'axios';\nimport { createContext } from 'react';\nimport { useEffect, useState } from 'react';\nimport { addRequest } from '../axios';\nimport { loginUser } from '../api/auth/authClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = _ref => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem('user')) || null);\n\n  const authLogin = async loginInput => {\n    _s();\n\n    async loginData => {\n      //отправляем запрос на auth/login с объектом LoginInput из Login.tsx\n      const res = await addRequest.post('/auth/login', loginData, {\n        withCredentials: true //Указывает, что при отправке запроса в нем должны быть куки и заголовки авторизации\n\n      });\n      setCurrentUser(res.data); //берем данные из LS, чтобы передавать в currentUser и отдать их в компоненты на фронте\n    };\n\n    useEffect(() => {\n      localStorage.setItem('user', JSON.stringify(currentUser)); //записываем данные в LS(указывается id, username, email, id, name, ava) для дальнейшей работы в Profile, Posts и тд(вытакиваем, чтобы узнать пользователя)\n    }, [currentUser]); //обновляем при изменении currentUser\n\n    return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        currentUser,\n        login\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  };\n\n  _s(authLogin, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n};\n\n_s2(AuthContextProvider, \"TYSXWRB1EfBdMuC847oVhn4GGWc=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/frontend/React/vk(api)/youtube2022/frontend/src/context/authContext.js"],"names":["axios","createContext","useEffect","useState","addRequest","loginUser","AuthContext","AuthContextProvider","children","currentUser","setCurrentUser","JSON","parse","localStorage","getItem","authLogin","loginInput","loginData","res","post","withCredentials","data","setItem","stringify","login"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;AAEP,OAAO,MAAMM,mBAAmB,GAAG,QAAkB;AAAA;;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,IAA7C,CAA9C;;AAEA,QAAMC,SAAS,GAAG,MAAOC,UAAP,IAAsB;AAAA;;AACtC,UAAOC,SAAP,IAAqB;AACnB;AACA,YAAMC,GAAG,GAAG,MAAMd,UAAU,CAACe,IAAX,CAAgB,aAAhB,EAA+BF,SAA/B,EAA0C;AAC1DG,QAAAA,eAAe,EAAE,IADyC,CACnC;;AADmC,OAA1C,CAAlB;AAGAV,MAAAA,cAAc,CAACQ,GAAG,CAACG,IAAL,CAAd,CALmB,CAKO;AAC3B,KAND;;AAQAnB,IAAAA,SAAS,CAAC,MAAM;AACdW,MAAAA,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACY,SAAL,CAAed,WAAf,CAA7B,EADc,CAC6C;AAC5D,KAFQ,EAEN,CAACA,WAAD,CAFM,CAAT,CATsC,CAWnB;;AAEnB,wBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEA,QAAAA,WAAF;AAAee,QAAAA;AAAf,OAA7B;AAAA,gBAAsDhB;AAAtD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAdD;;AAHmD,KAG7CO,SAH6C;AAkBpD,CAlBM;;IAAMR,mB;;KAAAA,mB","sourcesContent":["//весь AuthContext служит нам только для функционала логина и регистрации\r\nimport axios from 'axios';\r\nimport { createContext } from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { addRequest } from '../axios';\r\nimport { loginUser } from '../api/auth/authClient';\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem('user')) || null);\r\n\r\n  const authLogin = async (loginInput) => {\r\n    async (loginData) => {\r\n      //отправляем запрос на auth/login с объектом LoginInput из Login.tsx\r\n      const res = await addRequest.post('/auth/login', loginData, {\r\n        withCredentials: true, //Указывает, что при отправке запроса в нем должны быть куки и заголовки авторизации\r\n      });\r\n      setCurrentUser(res.data); //берем данные из LS, чтобы передавать в currentUser и отдать их в компоненты на фронте\r\n    };\r\n\r\n    useEffect(() => {\r\n      localStorage.setItem('user', JSON.stringify(currentUser)); //записываем данные в LS(указывается id, username, email, id, name, ava) для дальнейшей работы в Profile, Posts и тд(вытакиваем, чтобы узнать пользователя)\r\n    }, [currentUser]); //обновляем при изменении currentUser\r\n\r\n    return <AuthContext.Provider value={{ currentUser, login }}>{children}</AuthContext.Provider>;\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}