{"ast":null,"code":"var _jsxFileName = \"D:\\\\frontend\\\\React\\\\vk(api)\\\\youtube2022\\\\frontend\\\\src\\\\context\\\\authContext.js\",\n    _s = $RefreshSig$();\n\n//весь AuthContext служит нам только для функционала логина и регистрации\nimport axios from 'axios';\nimport { createContext } from 'react';\nimport { useEffect, useState } from 'react';\nimport { addRequest } from '../axios';\nimport { loginUser } from '../api/auth/authClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem('user')) || null);\n\n  const authLogin = async loginInput => {\n    setCurrentUser(loginUser()); //берем данные из LS, чтобы передавать в currentUser и отдать их в компоненты на фронте\n  };\n\n  useEffect(() => {\n    localStorage.setItem('user', JSON.stringify(currentUser)); //записываем данные в LS(указывается id, username, email, id, name, ava) для дальнейшей работы в Profile, Posts и тд(вытакиваем, чтобы узнать пользователя)\n  }, [currentUser]); //обновляем при изменении currentUser\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      login\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthContextProvider, \"JHJZjLeLOYF8pKpCUlXKJA6B4jg=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/frontend/React/vk(api)/youtube2022/frontend/src/context/authContext.js"],"names":["axios","createContext","useEffect","useState","addRequest","loginUser","AuthContext","AuthContextProvider","children","currentUser","setCurrentUser","JSON","parse","localStorage","getItem","authLogin","loginInput","setItem","stringify","login"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;AAEP,OAAO,MAAMM,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,IAA7C,CAA9C;;AAEA,QAAMC,SAAS,GAAG,MAAOC,UAAP,IAAsB;AACtCN,IAAAA,cAAc,CAACL,SAAS,EAAV,CAAd,CADsC,CACT;AAC9B,GAFD;;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BN,IAAI,CAACO,SAAL,CAAeT,WAAf,CAA7B,EADc,CAC6C;AAC5D,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT,CAPmD,CAShC;;AAEnB,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEA,MAAAA,WAAF;AAAeU,MAAAA;AAAf,KAA7B;AAAA,cAAsDX;AAAtD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAZM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["//весь AuthContext служит нам только для функционала логина и регистрации\r\nimport axios from 'axios';\r\nimport { createContext } from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { addRequest } from '../axios';\r\nimport { loginUser } from '../api/auth/authClient';\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem('user')) || null);\r\n\r\n  const authLogin = async (loginInput) => {\r\n    setCurrentUser(loginUser()); //берем данные из LS, чтобы передавать в currentUser и отдать их в компоненты на фронте\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('user', JSON.stringify(currentUser)); //записываем данные в LS(указывается id, username, email, id, name, ava) для дальнейшей работы в Profile, Posts и тд(вытакиваем, чтобы узнать пользователя)\r\n  }, [currentUser]); //обновляем при изменении currentUser\r\n\r\n  return <AuthContext.Provider value={{ currentUser, login }}>{children}</AuthContext.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}