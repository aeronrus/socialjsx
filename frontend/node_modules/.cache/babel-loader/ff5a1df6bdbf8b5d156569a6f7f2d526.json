{"ast":null,"code":"var _jsxFileName = \"D:\\\\frontend\\\\React\\\\vk(api)\\\\youtube2022\\\\frontend\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './comments.scss';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../context/authContext';\nimport Comment from '../comment/Comment';\nimport { useQuery, useMutation, useQueryClient, isError } from '@tanstack/react-query';\nimport { addRequest } from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = _ref => {\n  _s();\n\n  let {\n    postId\n  } = _ref;\n  const [desc, setDesc] = useState('');\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(['comments'], () => addRequest.get('/comments?postId=' + postId).then(res => {\n    return res.data;\n  }));\n  const queryClient = useQueryClient();\n  const mutation = useMutation(newComment => {\n    return addRequest.post('/comments', newComment);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries(['comments']);\n    }\n  });\n\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postId\n    });\n    setDesc('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: desc,\n      onChange: e => setDesc(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Add comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Errors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : data.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 31\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"C8MyMkhuKxiJw93s9V163oixy0g=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["D:/frontend/React/vk(api)/youtube2022/frontend/src/components/comments/Comments.jsx"],"names":["React","useContext","useState","Link","AuthContext","Comment","useQuery","useMutation","useQueryClient","isError","addRequest","Comments","postId","desc","setDesc","currentUser","isLoading","error","data","get","then","res","queryClient","mutation","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","target","value","map","comment"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,iBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,cAAhC,EAAgDC,OAAhD,QAA+D,uBAA/D;AACA,SAASC,UAAT,QAA2B,aAA3B;;;AAEA,MAAMC,QAAQ,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAkBd,UAAU,CAACG,WAAD,CAAlC;AAEA,QAAM;AAAEY,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BZ,QAAQ,CAAC,CAAC,UAAD,CAAD,EAAe,MACxDI,UAAU,CAACS,GAAX,CAAe,sBAAsBP,MAArC,EAA6CQ,IAA7C,CAAmDC,GAAD,IAAS;AACzD,WAAOA,GAAG,CAACH,IAAX;AACD,GAFD,CADyC,CAA3C;AAMA,QAAMI,WAAW,GAAGd,cAAc,EAAlC;AAEA,QAAMe,QAAQ,GAAGhB,WAAW,CACzBiB,UAAD,IAAgB;AACd,WAAOd,UAAU,CAACe,IAAX,CAAgB,WAAhB,EAA6BD,UAA7B,CAAP;AACD,GAHyB,EAI1B;AACEE,IAAAA,SAAS,EAAE,MAAM;AACf;AACAJ,MAAAA,WAAW,CAACK,iBAAZ,CAA8B,CAAC,UAAD,CAA9B;AACD;AAJH,GAJ0B,CAA5B;;AAYA,QAAMC,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,QAAQ,CAACQ,MAAT,CAAgB;AAAElB,MAAAA,IAAF;AAAQD,MAAAA;AAAR,KAAhB;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAO,MAAA,KAAK,EAAED,IAAd;AAAoB,MAAA,QAAQ,EAAGgB,CAAD,IAAOf,OAAO,CAACe,CAAC,CAACG,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEL,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGZ,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,GAENP,OAAO,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,GAGTS,IAAI,CAACgB,GAAL,CAAUC,OAAD,iBAAa,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAtB,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA3CD;;GAAMxB,Q;UAI+BL,Q,EAMfE,c,EAEHD,W;;;KAZbI,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport './comments.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport Comment from '../comment/Comment';\r\nimport { useQuery, useMutation, useQueryClient, isError } from '@tanstack/react-query';\r\nimport { addRequest } from '../../axios';\r\n\r\nconst Comments = ({ postId }) => {\r\n  const [desc, setDesc] = useState('');\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const { isLoading, error, data } = useQuery(['comments'], () =>\r\n    addRequest.get('/comments?postId=' + postId).then((res) => {\r\n      return res.data;\r\n    }),\r\n  );\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const mutation = useMutation(\r\n    (newComment) => {\r\n      return addRequest.post('/comments', newComment);\r\n    },\r\n    {\r\n      onSuccess: () => {\r\n        // Invalidate and refetch\r\n        queryClient.invalidateQueries(['comments']);\r\n      },\r\n    },\r\n  );\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    mutation.mutate({ desc, postId });\r\n    setDesc('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input value={desc} onChange={(e) => setDesc(e.target.value)}></input>\r\n      <button onClick={handleClick}>Add comment</button>\r\n      {isLoading ? (\r\n        <h3>Loading</h3>\r\n      ) : isError ? (\r\n        <h3>Errors</h3>\r\n      ) : (\r\n        data.map((comment) => <Comment comment={comment} />)\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}