{"ast":null,"code":"var _jsxFileName = \"D:\\\\frontend\\\\React\\\\vk(api)\\\\youtube2022\\\\frontend\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './comments.scss';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../context/authContext';\nimport Comment from '../comment/Comment';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { addRequest } from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createComment = async data => {\n  addRequest.post('/comments?postId=' + postId, data).then(res => {\n    return res.data;\n  });\n};\n\nconst Comments = _ref => {\n  _s();\n\n  let {\n    postId\n  } = _ref;\n  const [desc, setDesc] = useState('');\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(['comments'], () => addRequest.get('/comments?postId=' + postId).then(res => {\n    return res.data;\n  })); //ADD COMMENT\n\n  const mutation = useMutation(newComment => {\n    createComment(newComment);\n  }, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['comments']);\n    }\n  });\n\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postId\n    });\n    setDesc('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: desc,\n        onChange: e => setDesc(e.target.value),\n        placeholder: \"write your comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error ? 'Something error in comments' : isLoading ? 'LOADING' : data.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"vYm1i8vaT5JM+1FwI5IQWr8jmCY=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["D:/frontend/React/vk(api)/youtube2022/frontend/src/components/comments/Comments.jsx"],"names":["React","useContext","useState","Link","AuthContext","Comment","useQuery","useMutation","useQueryClient","addRequest","createComment","data","post","postId","then","res","Comments","desc","setDesc","currentUser","isLoading","error","get","mutation","newComment","onSuccess","queryClient","invalidateQueries","handleClick","e","preventDefault","mutate","profilePic","target","value","map","comment","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,iBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,cAAhC,QAAsD,uBAAtD;AACA,SAASC,UAAT,QAA2B,aAA3B;;;AAEA,MAAMC,aAAa,GAAG,MAAOC,IAAP,IAAgB;AACpCF,EAAAA,UAAU,CAACG,IAAX,CAAgB,sBAAsBC,MAAtC,EAA8CF,IAA9C,EAAoDG,IAApD,CAA0DC,GAAD,IAAS;AAChE,WAAOA,GAAG,CAACJ,IAAX;AACD,GAFD;AAGD,CAJD;;AAMA,MAAMK,QAAQ,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEH,IAAAA;AAAF,GAAe;AAC/B,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM;AAAEiB,IAAAA;AAAF,MAAkBlB,UAAU,CAACG,WAAD,CAAlC;AAEA,QAAM;AAAEgB,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBV,IAAAA;AAApB,MAA6BL,QAAQ,CAAC,CAAC,UAAD,CAAD,EAAe,MACxDG,UAAU,CAACa,GAAX,CAAe,sBAAsBT,MAArC,EAA6CC,IAA7C,CAAmDC,GAAD,IAAS;AACzD,WAAOA,GAAG,CAACJ,IAAX;AACD,GAFD,CADyC,CAA3C,CAL+B,CAW/B;;AAEA,QAAMY,QAAQ,GAAGhB,WAAW,CACzBiB,UAAD,IAAgB;AACdd,IAAAA,aAAa,CAACc,UAAD,CAAb;AACD,GAHyB,EAI1B;AACEC,IAAAA,SAAS,EAAE,MAAM;AACfC,MAAAA,WAAW,CAACC,iBAAZ,CAA8B,CAAC,UAAD,CAA9B;AACD;AAHH,GAJ0B,CAA5B;;AAWA,QAAMC,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,QAAQ,CAACQ,MAAT,CAAgB;AAAEd,MAAAA,IAAF;AAAQJ,MAAAA;AAAR,KAAhB;AACAK,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEC,WAAW,CAACa,UAAtB;AAAkC,QAAA,GAAG,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEf,IAFT;AAGE,QAAA,QAAQ,EAAGY,CAAD,IAAOX,OAAO,CAACW,CAAC,CAACI,MAAF,CAASC,KAAV,CAH1B;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAQ,QAAA,OAAO,EAAEN,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGP,KAAK,GACF,6BADE,GAEFD,SAAS,GACT,SADS,GAETT,IAAI,CAACwB,GAAL,CAAUC,OAAD,iBAAa,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB,OAAgCA,OAAO,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA,YAAtB,CAfN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjDD;;GAAMrB,Q;UAK+BV,Q,EAQlBC,W;;;KAbbS,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport './comments.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport Comment from '../comment/Comment';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { addRequest } from '../../axios';\r\n\r\nconst createComment = async (data) => {\r\n  addRequest.post('/comments?postId=' + postId, data).then((res) => {\r\n    return res.data;\r\n  });\r\n};\r\n\r\nconst Comments = ({ postId }) => {\r\n  const [desc, setDesc] = useState('');\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const { isLoading, error, data } = useQuery(['comments'], () =>\r\n    addRequest.get('/comments?postId=' + postId).then((res) => {\r\n      return res.data;\r\n    }),\r\n  );\r\n\r\n  //ADD COMMENT\r\n\r\n  const mutation = useMutation(\r\n    (newComment) => {\r\n      createComment(newComment);\r\n    },\r\n    {\r\n      onSuccess: () => {\r\n        queryClient.invalidateQueries(['comments']);\r\n      },\r\n    },\r\n  );\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    mutation.mutate({ desc, postId });\r\n    setDesc('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n      <div className=\"write\">\r\n        <img src={currentUser.profilePic} alt=\"\" />\r\n        <input\r\n          type=\"text\"\r\n          value={desc}\r\n          onChange={(e) => setDesc(e.target.value)}\r\n          placeholder=\"write your comment\"\r\n        />\r\n        <button onClick={handleClick}>Send</button>\r\n      </div>\r\n      {error\r\n        ? 'Something error in comments'\r\n        : isLoading\r\n        ? 'LOADING'\r\n        : data.map((comment) => <Comment comment={comment} key={comment.id} />)}\r\n    </div>\r\n  );\r\n};\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}